model App {
    id String @id

    type      Int
    name      String?
    icon      String?
    metadata  Json?
    createdAt DateTime? @default(now())
    updatedAt DateTime?

    instances      AppInstance[]
    threadSettings AppThreadSettings?
    filesSettings  AppFileSettings?
    pagesSettings  AppPageSettings[]
    formsSettings  AppFormSettings[]
}

model AppInstance {
    id String @id

    name      String?
    createdAt DateTime? @default(now())
    updatedAt DateTime?

    app   App    @relation(fields: [appId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    appId String

    appThreadData AppThread[]
    AppFileData   AppFile[]
    AppPageData   AppPage[]
    AppFormData   AppForm[]
}

//@relations
model AppThreadSettings {
    id String @id

    app   App    @relation(fields: [appId], references: [id])
    appId String @unique
}

//@relations
model AppPageSettings {
    id String @id

    app   App    @relation(fields: [appId], references: [id])
    appId String
}

//@relations
model AppFormSettings {
    id String @id

    app   App    @relation(fields: [appId], references: [id])
    appId String
}

//@relations
model AppFileSettings {
    id String @id

    app   App    @relation(fields: [appId], references: [id])
    appId String @unique
}

//@relations
model AppThread {
    id Int @id @default(autoincrement())

    appInstance   AppInstance? @relation(fields: [appInstanceId], references: [id])
    appInstanceId String?
}

//@relations
model AppFile {
    id Int @id @default(autoincrement())

    appInstance   AppInstance? @relation(fields: [appInstanceId], references: [id])
    appInstanceId String?
}

//@relations
model AppForm {
    id Int @id @default(autoincrement())

    appInstance   AppInstance? @relation(fields: [appInstanceId], references: [id])
    appInstanceId String?
}

//@relations
model AppPage {
    id Int @id @default(autoincrement())

    appInstance   AppInstance? @relation(fields: [appInstanceId], references: [id])
    appInstanceId String?
}
