generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

datasource db {
    provider  = "postgresql"
    url       = env("PG_QUARKLOOP_SYSTEM_URL") // uses connection pooling
    directUrl = env("PG_QUARKLOOP_SYSTEM_URL_NON_POOLING") // used for migrations
    schemas   = ["system"]
}

model Organization {
    // id
    id  Int    @id @default(autoincrement())
    sid String @unique // scoped id

    // organization
    name        String
    description String
    accessType  Int
    metadata    Json?

    // history
    createdAt DateTime  @default(now())
    updatedAt DateTime?
    createdBy String
    updatedBy String?

    // relation
    workspaces Workspace[]
    projects   Project[]

    @@schema("system")
}

model Workspace {
    // id
    id    Int    @id @default(autoincrement())
    orgId Int
    sid   String // scoped id

    // workspace
    name        String
    description String
    accessType  Int
    metadata    Json?

    // history
    createdAt DateTime  @default(now())
    updatedAt DateTime?
    createdBy String
    updatedBy String?

    // relation
    organization Organization @relation(fields: [orgId], references: [id])
    projects     Project[]

    @@unique([orgId, sid])
    @@index([orgId])
    @@schema("system")
}

model Project {
    // id
    id          Int    @id @default(autoincrement())
    orgId       Int
    workspaceId Int
    sid         String // scoped id

    // project
    name        String
    description String
    accessType  Int
    metadata    Json?

    // history
    createdAt DateTime  @default(now())
    updatedAt DateTime?
    createdBy String
    updatedBy String?

    // relation
    organization Organization @relation(fields: [orgId], references: [id])
    workspace    Workspace    @relation(fields: [workspaceId], references: [id])

    @@unique([orgId, workspaceId, sid])
    @@index([orgId, workspaceId])
    @@index([orgId])
    @@schema("system")
}
