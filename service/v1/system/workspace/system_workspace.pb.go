// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: system_workspace.proto

package workspace

import (
	system "github.com/quarkloop/quarkloop/service/v1/system"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetWorkspaceByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
}

func (x *GetWorkspaceByIdQuery) Reset() {
	*x = GetWorkspaceByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceByIdQuery) ProtoMessage() {}

func (x *GetWorkspaceByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceByIdQuery.ProtoReflect.Descriptor instead.
func (*GetWorkspaceByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{0}
}

func (x *GetWorkspaceByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetWorkspaceByIdQuery) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

type GetWorkspaceByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *system.Workspace `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
}

func (x *GetWorkspaceByIdReply) Reset() {
	*x = GetWorkspaceByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceByIdReply) ProtoMessage() {}

func (x *GetWorkspaceByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceByIdReply.ProtoReflect.Descriptor instead.
func (*GetWorkspaceByIdReply) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{1}
}

func (x *GetWorkspaceByIdReply) GetWorkspace() *system.Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type GetWorkspaceVisibilityByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
}

func (x *GetWorkspaceVisibilityByIdQuery) Reset() {
	*x = GetWorkspaceVisibilityByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceVisibilityByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceVisibilityByIdQuery) ProtoMessage() {}

func (x *GetWorkspaceVisibilityByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceVisibilityByIdQuery.ProtoReflect.Descriptor instead.
func (*GetWorkspaceVisibilityByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{2}
}

func (x *GetWorkspaceVisibilityByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetWorkspaceVisibilityByIdQuery) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

type GetWorkspaceVisibilityByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visibility int32 `protobuf:"varint,1,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetWorkspaceVisibilityByIdReply) Reset() {
	*x = GetWorkspaceVisibilityByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceVisibilityByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceVisibilityByIdReply) ProtoMessage() {}

func (x *GetWorkspaceVisibilityByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceVisibilityByIdReply.ProtoReflect.Descriptor instead.
func (*GetWorkspaceVisibilityByIdReply) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkspaceVisibilityByIdReply) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetWorkspaceListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceIdList []int32 `protobuf:"varint,2,rep,packed,name=workspaceIdList,proto3" json:"workspaceIdList,omitempty"`
	Visibility      int32   `protobuf:"varint,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetWorkspaceListQuery) Reset() {
	*x = GetWorkspaceListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceListQuery) ProtoMessage() {}

func (x *GetWorkspaceListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceListQuery.ProtoReflect.Descriptor instead.
func (*GetWorkspaceListQuery) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{4}
}

func (x *GetWorkspaceListQuery) GetWorkspaceIdList() []int32 {
	if x != nil {
		return x.WorkspaceIdList
	}
	return nil
}

func (x *GetWorkspaceListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetWorkspaceListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceList []*system.Workspace `protobuf:"bytes,1,rep,name=workspaceList,proto3" json:"workspaceList,omitempty"`
}

func (x *GetWorkspaceListReply) Reset() {
	*x = GetWorkspaceListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceListReply) ProtoMessage() {}

func (x *GetWorkspaceListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceListReply.ProtoReflect.Descriptor instead.
func (*GetWorkspaceListReply) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{5}
}

func (x *GetWorkspaceListReply) GetWorkspaceList() []*system.Workspace {
	if x != nil {
		return x.WorkspaceList
	}
	return nil
}

type GetProjectListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Visibility  int32 `protobuf:"varint,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetProjectListQuery) Reset() {
	*x = GetProjectListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListQuery) ProtoMessage() {}

func (x *GetProjectListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListQuery.ProtoReflect.Descriptor instead.
func (*GetProjectListQuery) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectListQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetProjectListQuery) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetProjectListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetProjectListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectList []*system.Project `protobuf:"bytes,1,rep,name=projectList,proto3" json:"projectList,omitempty"`
}

func (x *GetProjectListReply) Reset() {
	*x = GetProjectListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListReply) ProtoMessage() {}

func (x *GetProjectListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListReply.ProtoReflect.Descriptor instead.
func (*GetProjectListReply) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{7}
}

func (x *GetProjectListReply) GetProjectList() []*system.Project {
	if x != nil {
		return x.ProjectList
	}
	return nil
}

type CreateWorkspaceCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	CreatedBy   string `protobuf:"bytes,2,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ScopeId     string `protobuf:"bytes,3,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,6,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *CreateWorkspaceCommand) Reset() {
	*x = CreateWorkspaceCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspaceCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceCommand) ProtoMessage() {}

func (x *CreateWorkspaceCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceCommand.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceCommand) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWorkspaceCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CreateWorkspaceCommand) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateWorkspaceCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *CreateWorkspaceCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkspaceCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkspaceCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type CreateWorkspaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *system.Workspace `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
}

func (x *CreateWorkspaceReply) Reset() {
	*x = CreateWorkspaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceReply) ProtoMessage() {}

func (x *CreateWorkspaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceReply.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceReply) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWorkspaceReply) GetWorkspace() *system.Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type UpdateWorkspaceByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UpdatedBy   string `protobuf:"bytes,2,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	WorkspaceId int32  `protobuf:"varint,3,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ScopeId     string `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,7,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *UpdateWorkspaceByIdCommand) Reset() {
	*x = UpdateWorkspaceByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkspaceByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkspaceByIdCommand) ProtoMessage() {}

func (x *UpdateWorkspaceByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkspaceByIdCommand.ProtoReflect.Descriptor instead.
func (*UpdateWorkspaceByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateWorkspaceByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *UpdateWorkspaceByIdCommand) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *UpdateWorkspaceByIdCommand) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *UpdateWorkspaceByIdCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *UpdateWorkspaceByIdCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWorkspaceByIdCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateWorkspaceByIdCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type DeleteWorkspaceByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
}

func (x *DeleteWorkspaceByIdCommand) Reset() {
	*x = DeleteWorkspaceByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_workspace_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkspaceByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkspaceByIdCommand) ProtoMessage() {}

func (x *DeleteWorkspaceByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_workspace_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkspaceByIdCommand.ProtoReflect.Descriptor instead.
func (*DeleteWorkspaceByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_workspace_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteWorkspaceByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *DeleteWorkspaceByIdCommand) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

var File_system_workspace_proto protoreflect.FileDescriptor

var file_system_workspace_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2f, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x59, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x61,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbc, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x54, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x32,
	0xf0, 0x05, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x27, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x31,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x27, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x28, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x71, 0x75, 0x61, 0x72, 0x6b,
	0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_workspace_proto_rawDescOnce sync.Once
	file_system_workspace_proto_rawDescData = file_system_workspace_proto_rawDesc
)

func file_system_workspace_proto_rawDescGZIP() []byte {
	file_system_workspace_proto_rawDescOnce.Do(func() {
		file_system_workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_workspace_proto_rawDescData)
	})
	return file_system_workspace_proto_rawDescData
}

var file_system_workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_system_workspace_proto_goTypes = []interface{}{
	(*GetWorkspaceByIdQuery)(nil),           // 0: system.workspace.GetWorkspaceByIdQuery
	(*GetWorkspaceByIdReply)(nil),           // 1: system.workspace.GetWorkspaceByIdReply
	(*GetWorkspaceVisibilityByIdQuery)(nil), // 2: system.workspace.GetWorkspaceVisibilityByIdQuery
	(*GetWorkspaceVisibilityByIdReply)(nil), // 3: system.workspace.GetWorkspaceVisibilityByIdReply
	(*GetWorkspaceListQuery)(nil),           // 4: system.workspace.GetWorkspaceListQuery
	(*GetWorkspaceListReply)(nil),           // 5: system.workspace.GetWorkspaceListReply
	(*GetProjectListQuery)(nil),             // 6: system.workspace.GetProjectListQuery
	(*GetProjectListReply)(nil),             // 7: system.workspace.GetProjectListReply
	(*CreateWorkspaceCommand)(nil),          // 8: system.workspace.CreateWorkspaceCommand
	(*CreateWorkspaceReply)(nil),            // 9: system.workspace.CreateWorkspaceReply
	(*UpdateWorkspaceByIdCommand)(nil),      // 10: system.workspace.UpdateWorkspaceByIdCommand
	(*DeleteWorkspaceByIdCommand)(nil),      // 11: system.workspace.DeleteWorkspaceByIdCommand
	(*system.Workspace)(nil),                // 12: system.Workspace
	(*system.Project)(nil),                  // 13: system.Project
	(*emptypb.Empty)(nil),                   // 14: google.protobuf.Empty
}
var file_system_workspace_proto_depIdxs = []int32{
	12, // 0: system.workspace.GetWorkspaceByIdReply.workspace:type_name -> system.Workspace
	12, // 1: system.workspace.GetWorkspaceListReply.workspaceList:type_name -> system.Workspace
	13, // 2: system.workspace.GetProjectListReply.projectList:type_name -> system.Project
	12, // 3: system.workspace.CreateWorkspaceReply.workspace:type_name -> system.Workspace
	0,  // 4: system.workspace.WorkspaceService.GetWorkspaceById:input_type -> system.workspace.GetWorkspaceByIdQuery
	2,  // 5: system.workspace.WorkspaceService.GetWorkspaceVisibilityById:input_type -> system.workspace.GetWorkspaceVisibilityByIdQuery
	4,  // 6: system.workspace.WorkspaceService.GetWorkspaceList:input_type -> system.workspace.GetWorkspaceListQuery
	6,  // 7: system.workspace.WorkspaceService.GetProjectList:input_type -> system.workspace.GetProjectListQuery
	8,  // 8: system.workspace.WorkspaceService.CreateWorkspace:input_type -> system.workspace.CreateWorkspaceCommand
	10, // 9: system.workspace.WorkspaceService.UpdateWorkspaceById:input_type -> system.workspace.UpdateWorkspaceByIdCommand
	11, // 10: system.workspace.WorkspaceService.DeleteWorkspaceById:input_type -> system.workspace.DeleteWorkspaceByIdCommand
	1,  // 11: system.workspace.WorkspaceService.GetWorkspaceById:output_type -> system.workspace.GetWorkspaceByIdReply
	3,  // 12: system.workspace.WorkspaceService.GetWorkspaceVisibilityById:output_type -> system.workspace.GetWorkspaceVisibilityByIdReply
	5,  // 13: system.workspace.WorkspaceService.GetWorkspaceList:output_type -> system.workspace.GetWorkspaceListReply
	7,  // 14: system.workspace.WorkspaceService.GetProjectList:output_type -> system.workspace.GetProjectListReply
	9,  // 15: system.workspace.WorkspaceService.CreateWorkspace:output_type -> system.workspace.CreateWorkspaceReply
	14, // 16: system.workspace.WorkspaceService.UpdateWorkspaceById:output_type -> google.protobuf.Empty
	14, // 17: system.workspace.WorkspaceService.DeleteWorkspaceById:output_type -> google.protobuf.Empty
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_system_workspace_proto_init() }
func file_system_workspace_proto_init() {
	if File_system_workspace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_workspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceVisibilityByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceVisibilityByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspaceCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkspaceByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_workspace_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkspaceByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_workspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_workspace_proto_goTypes,
		DependencyIndexes: file_system_workspace_proto_depIdxs,
		MessageInfos:      file_system_workspace_proto_msgTypes,
	}.Build()
	File_system_workspace_proto = out.File
	file_system_workspace_proto_rawDesc = nil
	file_system_workspace_proto_goTypes = nil
	file_system_workspace_proto_depIdxs = nil
}
