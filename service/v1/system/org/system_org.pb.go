// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: system_org.proto

package org

import (
	system "github.com/quarkloop/quarkloop/service/v1/system"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrgByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetOrgByIdQuery) Reset() {
	*x = GetOrgByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgByIdQuery) ProtoMessage() {}

func (x *GetOrgByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgByIdQuery.ProtoReflect.Descriptor instead.
func (*GetOrgByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrgByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetOrgByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org *system.Org `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *GetOrgByIdReply) Reset() {
	*x = GetOrgByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgByIdReply) ProtoMessage() {}

func (x *GetOrgByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgByIdReply.ProtoReflect.Descriptor instead.
func (*GetOrgByIdReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrgByIdReply) GetOrg() *system.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type GetOrgVisibilityByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetOrgVisibilityByIdQuery) Reset() {
	*x = GetOrgVisibilityByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgVisibilityByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgVisibilityByIdQuery) ProtoMessage() {}

func (x *GetOrgVisibilityByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgVisibilityByIdQuery.ProtoReflect.Descriptor instead.
func (*GetOrgVisibilityByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{2}
}

func (x *GetOrgVisibilityByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetOrgVisibilityByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visibility int32 `protobuf:"varint,1,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetOrgVisibilityByIdReply) Reset() {
	*x = GetOrgVisibilityByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgVisibilityByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgVisibilityByIdReply) ProtoMessage() {}

func (x *GetOrgVisibilityByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgVisibilityByIdReply.ProtoReflect.Descriptor instead.
func (*GetOrgVisibilityByIdReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{3}
}

func (x *GetOrgVisibilityByIdReply) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetOrgListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgIdList  []int32 `protobuf:"varint,1,rep,packed,name=orgIdList,proto3" json:"orgIdList,omitempty"`
	Visibility int32   `protobuf:"varint,2,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetOrgListQuery) Reset() {
	*x = GetOrgListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgListQuery) ProtoMessage() {}

func (x *GetOrgListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgListQuery.ProtoReflect.Descriptor instead.
func (*GetOrgListQuery) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrgListQuery) GetOrgIdList() []int32 {
	if x != nil {
		return x.OrgIdList
	}
	return nil
}

func (x *GetOrgListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetOrgListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgList []*system.Org `protobuf:"bytes,1,rep,name=orgList,proto3" json:"orgList,omitempty"`
}

func (x *GetOrgListReply) Reset() {
	*x = GetOrgListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgListReply) ProtoMessage() {}

func (x *GetOrgListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgListReply.ProtoReflect.Descriptor instead.
func (*GetOrgListReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrgListReply) GetOrgList() []*system.Org {
	if x != nil {
		return x.OrgList
	}
	return nil
}

type GetWorkspaceListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Visibility int32 `protobuf:"varint,2,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetWorkspaceListQuery) Reset() {
	*x = GetWorkspaceListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceListQuery) ProtoMessage() {}

func (x *GetWorkspaceListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceListQuery.ProtoReflect.Descriptor instead.
func (*GetWorkspaceListQuery) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{6}
}

func (x *GetWorkspaceListQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetWorkspaceListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetWorkspaceListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceList []*system.Workspace `protobuf:"bytes,1,rep,name=workspaceList,proto3" json:"workspaceList,omitempty"`
}

func (x *GetWorkspaceListReply) Reset() {
	*x = GetWorkspaceListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceListReply) ProtoMessage() {}

func (x *GetWorkspaceListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceListReply.ProtoReflect.Descriptor instead.
func (*GetWorkspaceListReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{7}
}

func (x *GetWorkspaceListReply) GetWorkspaceList() []*system.Workspace {
	if x != nil {
		return x.WorkspaceList
	}
	return nil
}

type GetProjectListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Visibility int32 `protobuf:"varint,2,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetProjectListQuery) Reset() {
	*x = GetProjectListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListQuery) ProtoMessage() {}

func (x *GetProjectListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListQuery.ProtoReflect.Descriptor instead.
func (*GetProjectListQuery) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{8}
}

func (x *GetProjectListQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetProjectListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetProjectListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectList []*system.Project `protobuf:"bytes,1,rep,name=projectList,proto3" json:"projectList,omitempty"`
}

func (x *GetProjectListReply) Reset() {
	*x = GetProjectListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListReply) ProtoMessage() {}

func (x *GetProjectListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListReply.ProtoReflect.Descriptor instead.
func (*GetProjectListReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{9}
}

func (x *GetProjectListReply) GetProjectList() []*system.Project {
	if x != nil {
		return x.ProjectList
	}
	return nil
}

type CreateOrgCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedBy   string `protobuf:"bytes,1,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ScopeId     string `protobuf:"bytes,2,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,5,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *CreateOrgCommand) Reset() {
	*x = CreateOrgCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgCommand) ProtoMessage() {}

func (x *CreateOrgCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgCommand.ProtoReflect.Descriptor instead.
func (*CreateOrgCommand) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{10}
}

func (x *CreateOrgCommand) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateOrgCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *CreateOrgCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrgCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrgCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type CreateOrgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org *system.Org `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *CreateOrgReply) Reset() {
	*x = CreateOrgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgReply) ProtoMessage() {}

func (x *CreateOrgReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgReply.ProtoReflect.Descriptor instead.
func (*CreateOrgReply) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{11}
}

func (x *CreateOrgReply) GetOrg() *system.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type UpdateOrgByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedBy   string `protobuf:"bytes,1,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	OrgId       int32  `protobuf:"varint,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ScopeId     string `protobuf:"bytes,3,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,6,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *UpdateOrgByIdCommand) Reset() {
	*x = UpdateOrgByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgByIdCommand) ProtoMessage() {}

func (x *UpdateOrgByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgByIdCommand.ProtoReflect.Descriptor instead.
func (*UpdateOrgByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateOrgByIdCommand) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *UpdateOrgByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *UpdateOrgByIdCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *UpdateOrgByIdCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrgByIdCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateOrgByIdCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type DeleteOrgByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *DeleteOrgByIdCommand) Reset() {
	*x = DeleteOrgByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_org_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgByIdCommand) ProtoMessage() {}

func (x *DeleteOrgByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_org_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgByIdCommand.ProtoReflect.Descriptor instead.
func (*DeleteOrgByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_org_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteOrgByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

var File_system_org_proto protoreflect.FileDescriptor

var file_system_org_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x52,
	0x03, 0x6f, 0x72, 0x67, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x50,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x48, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x03,
	0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0xba, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x2c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x32, 0x9d, 0x05, 0x0a, 0x0a, 0x4f, 0x72, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x25,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x1a,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x71,
	0x75, 0x61, 0x72, 0x6b, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6f, 0x72, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_org_proto_rawDescOnce sync.Once
	file_system_org_proto_rawDescData = file_system_org_proto_rawDesc
)

func file_system_org_proto_rawDescGZIP() []byte {
	file_system_org_proto_rawDescOnce.Do(func() {
		file_system_org_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_org_proto_rawDescData)
	})
	return file_system_org_proto_rawDescData
}

var file_system_org_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_system_org_proto_goTypes = []interface{}{
	(*GetOrgByIdQuery)(nil),           // 0: system.org.GetOrgByIdQuery
	(*GetOrgByIdReply)(nil),           // 1: system.org.GetOrgByIdReply
	(*GetOrgVisibilityByIdQuery)(nil), // 2: system.org.GetOrgVisibilityByIdQuery
	(*GetOrgVisibilityByIdReply)(nil), // 3: system.org.GetOrgVisibilityByIdReply
	(*GetOrgListQuery)(nil),           // 4: system.org.GetOrgListQuery
	(*GetOrgListReply)(nil),           // 5: system.org.GetOrgListReply
	(*GetWorkspaceListQuery)(nil),     // 6: system.org.GetWorkspaceListQuery
	(*GetWorkspaceListReply)(nil),     // 7: system.org.GetWorkspaceListReply
	(*GetProjectListQuery)(nil),       // 8: system.org.GetProjectListQuery
	(*GetProjectListReply)(nil),       // 9: system.org.GetProjectListReply
	(*CreateOrgCommand)(nil),          // 10: system.org.CreateOrgCommand
	(*CreateOrgReply)(nil),            // 11: system.org.CreateOrgReply
	(*UpdateOrgByIdCommand)(nil),      // 12: system.org.UpdateOrgByIdCommand
	(*DeleteOrgByIdCommand)(nil),      // 13: system.org.DeleteOrgByIdCommand
	(*system.Org)(nil),                // 14: system.Org
	(*system.Workspace)(nil),          // 15: system.Workspace
	(*system.Project)(nil),            // 16: system.Project
	(*emptypb.Empty)(nil),             // 17: google.protobuf.Empty
}
var file_system_org_proto_depIdxs = []int32{
	14, // 0: system.org.GetOrgByIdReply.org:type_name -> system.Org
	14, // 1: system.org.GetOrgListReply.orgList:type_name -> system.Org
	15, // 2: system.org.GetWorkspaceListReply.workspaceList:type_name -> system.Workspace
	16, // 3: system.org.GetProjectListReply.projectList:type_name -> system.Project
	14, // 4: system.org.CreateOrgReply.org:type_name -> system.Org
	0,  // 5: system.org.OrgService.GetOrgById:input_type -> system.org.GetOrgByIdQuery
	2,  // 6: system.org.OrgService.GetOrgVisibilityById:input_type -> system.org.GetOrgVisibilityByIdQuery
	4,  // 7: system.org.OrgService.GetOrgList:input_type -> system.org.GetOrgListQuery
	6,  // 8: system.org.OrgService.GetWorkspaceList:input_type -> system.org.GetWorkspaceListQuery
	8,  // 9: system.org.OrgService.GetProjectList:input_type -> system.org.GetProjectListQuery
	10, // 10: system.org.OrgService.CreateOrg:input_type -> system.org.CreateOrgCommand
	12, // 11: system.org.OrgService.UpdateOrgById:input_type -> system.org.UpdateOrgByIdCommand
	13, // 12: system.org.OrgService.DeleteOrgById:input_type -> system.org.DeleteOrgByIdCommand
	1,  // 13: system.org.OrgService.GetOrgById:output_type -> system.org.GetOrgByIdReply
	3,  // 14: system.org.OrgService.GetOrgVisibilityById:output_type -> system.org.GetOrgVisibilityByIdReply
	5,  // 15: system.org.OrgService.GetOrgList:output_type -> system.org.GetOrgListReply
	7,  // 16: system.org.OrgService.GetWorkspaceList:output_type -> system.org.GetWorkspaceListReply
	9,  // 17: system.org.OrgService.GetProjectList:output_type -> system.org.GetProjectListReply
	11, // 18: system.org.OrgService.CreateOrg:output_type -> system.org.CreateOrgReply
	17, // 19: system.org.OrgService.UpdateOrgById:output_type -> google.protobuf.Empty
	17, // 20: system.org.OrgService.DeleteOrgById:output_type -> google.protobuf.Empty
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_system_org_proto_init() }
func file_system_org_proto_init() {
	if File_system_org_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_org_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgVisibilityByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgVisibilityByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_org_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_org_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_org_proto_goTypes,
		DependencyIndexes: file_system_org_proto_depIdxs,
		MessageInfos:      file_system_org_proto_msgTypes,
	}.Build()
	File_system_org_proto = out.File
	file_system_org_proto_rawDesc = nil
	file_system_org_proto_goTypes = nil
	file_system_org_proto_depIdxs = nil
}
