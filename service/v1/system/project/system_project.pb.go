// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: system_project.proto

package project

import (
	system "github.com/quarkloop/quarkloop/service/v1/system"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProjectByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ProjectId   int32 `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *GetProjectByIdQuery) Reset() {
	*x = GetProjectByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIdQuery) ProtoMessage() {}

func (x *GetProjectByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIdQuery.ProtoReflect.Descriptor instead.
func (*GetProjectByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{0}
}

func (x *GetProjectByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetProjectByIdQuery) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetProjectByIdQuery) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type GetProjectByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *system.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectByIdReply) Reset() {
	*x = GetProjectByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIdReply) ProtoMessage() {}

func (x *GetProjectByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIdReply.ProtoReflect.Descriptor instead.
func (*GetProjectByIdReply) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{1}
}

func (x *GetProjectByIdReply) GetProject() *system.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectVisibilityByIdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ProjectId   int32 `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *GetProjectVisibilityByIdQuery) Reset() {
	*x = GetProjectVisibilityByIdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectVisibilityByIdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectVisibilityByIdQuery) ProtoMessage() {}

func (x *GetProjectVisibilityByIdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectVisibilityByIdQuery.ProtoReflect.Descriptor instead.
func (*GetProjectVisibilityByIdQuery) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{2}
}

func (x *GetProjectVisibilityByIdQuery) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *GetProjectVisibilityByIdQuery) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetProjectVisibilityByIdQuery) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type GetProjectVisibilityByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visibility int32 `protobuf:"varint,1,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetProjectVisibilityByIdReply) Reset() {
	*x = GetProjectVisibilityByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectVisibilityByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectVisibilityByIdReply) ProtoMessage() {}

func (x *GetProjectVisibilityByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectVisibilityByIdReply.ProtoReflect.Descriptor instead.
func (*GetProjectVisibilityByIdReply) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{3}
}

func (x *GetProjectVisibilityByIdReply) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetProjectListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIdList []int32 `protobuf:"varint,2,rep,packed,name=projectIdList,proto3" json:"projectIdList,omitempty"`
	Visibility    int32   `protobuf:"varint,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *GetProjectListQuery) Reset() {
	*x = GetProjectListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListQuery) ProtoMessage() {}

func (x *GetProjectListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListQuery.ProtoReflect.Descriptor instead.
func (*GetProjectListQuery) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{4}
}

func (x *GetProjectListQuery) GetProjectIdList() []int32 {
	if x != nil {
		return x.ProjectIdList
	}
	return nil
}

func (x *GetProjectListQuery) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type GetProjectListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectList []*system.Project `protobuf:"bytes,1,rep,name=projectList,proto3" json:"projectList,omitempty"`
}

func (x *GetProjectListReply) Reset() {
	*x = GetProjectListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListReply) ProtoMessage() {}

func (x *GetProjectListReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListReply.ProtoReflect.Descriptor instead.
func (*GetProjectListReply) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{5}
}

func (x *GetProjectListReply) GetProjectList() []*system.Project {
	if x != nil {
		return x.ProjectList
	}
	return nil
}

type CreateProjectCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32  `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CreatedBy   string `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ScopeId     string `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,7,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *CreateProjectCommand) Reset() {
	*x = CreateProjectCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectCommand) ProtoMessage() {}

func (x *CreateProjectCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectCommand.ProtoReflect.Descriptor instead.
func (*CreateProjectCommand) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{6}
}

func (x *CreateProjectCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CreateProjectCommand) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *CreateProjectCommand) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateProjectCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *CreateProjectCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type CreateProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *system.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateProjectReply) Reset() {
	*x = CreateProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectReply) ProtoMessage() {}

func (x *CreateProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectReply.ProtoReflect.Descriptor instead.
func (*CreateProjectReply) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{7}
}

func (x *CreateProjectReply) GetProject() *system.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32  `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ProjectId   int32  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	UpdatedBy   string `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	ScopeId     string `protobuf:"bytes,5,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Name        string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Visibility  int32  `protobuf:"varint,8,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *UpdateProjectByIdCommand) Reset() {
	*x = UpdateProjectByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectByIdCommand) ProtoMessage() {}

func (x *UpdateProjectByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectByIdCommand.ProtoReflect.Descriptor instead.
func (*UpdateProjectByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateProjectByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *UpdateProjectByIdCommand) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *UpdateProjectByIdCommand) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateProjectByIdCommand) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *UpdateProjectByIdCommand) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *UpdateProjectByIdCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectByIdCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProjectByIdCommand) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

type DeleteProjectByIdCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       int32 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ProjectId   int32 `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *DeleteProjectByIdCommand) Reset() {
	*x = DeleteProjectByIdCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_project_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectByIdCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectByIdCommand) ProtoMessage() {}

func (x *DeleteProjectByIdCommand) ProtoReflect() protoreflect.Message {
	mi := &file_system_project_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectByIdCommand.ProtoReflect.Descriptor instead.
func (*DeleteProjectByIdCommand) Descriptor() ([]byte, []int) {
	return file_system_project_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteProjectByIdCommand) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *DeleteProjectByIdCommand) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *DeleteProjectByIdCommand) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

var File_system_project_proto protoreflect.FileDescriptor

var file_system_project_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x75, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xdc, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x3f,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xfe, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0x70, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x32, 0xd7, 0x04, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x23, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x2d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x28, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x61, 0x72, 0x6b,
	0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_project_proto_rawDescOnce sync.Once
	file_system_project_proto_rawDescData = file_system_project_proto_rawDesc
)

func file_system_project_proto_rawDescGZIP() []byte {
	file_system_project_proto_rawDescOnce.Do(func() {
		file_system_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_project_proto_rawDescData)
	})
	return file_system_project_proto_rawDescData
}

var file_system_project_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_system_project_proto_goTypes = []interface{}{
	(*GetProjectByIdQuery)(nil),           // 0: system.project.GetProjectByIdQuery
	(*GetProjectByIdReply)(nil),           // 1: system.project.GetProjectByIdReply
	(*GetProjectVisibilityByIdQuery)(nil), // 2: system.project.GetProjectVisibilityByIdQuery
	(*GetProjectVisibilityByIdReply)(nil), // 3: system.project.GetProjectVisibilityByIdReply
	(*GetProjectListQuery)(nil),           // 4: system.project.GetProjectListQuery
	(*GetProjectListReply)(nil),           // 5: system.project.GetProjectListReply
	(*CreateProjectCommand)(nil),          // 6: system.project.CreateProjectCommand
	(*CreateProjectReply)(nil),            // 7: system.project.CreateProjectReply
	(*UpdateProjectByIdCommand)(nil),      // 8: system.project.UpdateProjectByIdCommand
	(*DeleteProjectByIdCommand)(nil),      // 9: system.project.DeleteProjectByIdCommand
	(*system.Project)(nil),                // 10: system.Project
	(*emptypb.Empty)(nil),                 // 11: google.protobuf.Empty
}
var file_system_project_proto_depIdxs = []int32{
	10, // 0: system.project.GetProjectByIdReply.project:type_name -> system.Project
	10, // 1: system.project.GetProjectListReply.projectList:type_name -> system.Project
	10, // 2: system.project.CreateProjectReply.project:type_name -> system.Project
	0,  // 3: system.project.ProjectService.GetProjectById:input_type -> system.project.GetProjectByIdQuery
	2,  // 4: system.project.ProjectService.GetProjectVisibilityById:input_type -> system.project.GetProjectVisibilityByIdQuery
	4,  // 5: system.project.ProjectService.GetProjectList:input_type -> system.project.GetProjectListQuery
	6,  // 6: system.project.ProjectService.CreateProject:input_type -> system.project.CreateProjectCommand
	8,  // 7: system.project.ProjectService.UpdateProjectById:input_type -> system.project.UpdateProjectByIdCommand
	9,  // 8: system.project.ProjectService.DeleteProjectById:input_type -> system.project.DeleteProjectByIdCommand
	1,  // 9: system.project.ProjectService.GetProjectById:output_type -> system.project.GetProjectByIdReply
	3,  // 10: system.project.ProjectService.GetProjectVisibilityById:output_type -> system.project.GetProjectVisibilityByIdReply
	5,  // 11: system.project.ProjectService.GetProjectList:output_type -> system.project.GetProjectListReply
	7,  // 12: system.project.ProjectService.CreateProject:output_type -> system.project.CreateProjectReply
	11, // 13: system.project.ProjectService.UpdateProjectById:output_type -> google.protobuf.Empty
	11, // 14: system.project.ProjectService.DeleteProjectById:output_type -> google.protobuf.Empty
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_system_project_proto_init() }
func file_system_project_proto_init() {
	if File_system_project_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_project_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectVisibilityByIdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectVisibilityByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_project_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectByIdCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_project_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_project_proto_goTypes,
		DependencyIndexes: file_system_project_proto_depIdxs,
		MessageInfos:      file_system_project_proto_msgTypes,
	}.Build()
	File_system_project_proto = out.File
	file_system_project_proto_rawDesc = nil
	file_system_project_proto_goTypes = nil
	file_system_project_proto_depIdxs = nil
}
